{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/prueba/prueba.component.ts","./src/app/prueba/prueba.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACK;;;AAG5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAe;KAC3B;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,QAAQ,CAAC;KAClB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACiB;AACF;AACT;AACF;AACe;;;AAgBrD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,uEAAkB,CAAC,OAAO,EAAE;YAC5B,0DAAW;SACZ;mIAIU,SAAS,mBAZlB,2DAAY;QACZ,wEAAe,aAGf,uEAAa;QACb,oEAAgB,sEAEhB,0DAAW;6FAKF,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,uEAAkB,CAAC,OAAO,EAAE;oBAC5B,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICyBxC,0EACE;IAAA,wEAA6D;IAAA,iEAAM;IAAA,4DAAI;IACvE,wEAA6D;IAAA,yEAAc;IAAA,4DAAI;IAC/E,wEAA6D;IAAA,8EAAmB;IAAA,4DAAI;IACpF,qEAA4C;IAC5C,wEAA6D;IAAA,yEAAc;IAAA,4DAAI;IACjF,4DAAM;;ADxBT,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCN5B,gFAEI;QACA,mFAAkB;QAAA,uEAAiC;QAAA,iEAAM;QAAA,4DAAI;QAAA,4DAAmB;QAGhF,wEAEE;QACA,wEACE;QAAA,wEACE;QAAA,uEAA+C;QAAA,+DAAI;QAAA,0EAAsB;QAAA,qEAAS;QAAA,4DAAO;QAAA,4DAAI;QAC/F,4DAAK;QACL,yEACE;QAAA,wEAA+C;QAAA,oEAAQ;QAAA,4DAAI;QAC7D,4DAAK;QACL,yEACE;QAAA,wEAA+C;QAAA,mEAAO;QAAA,4DAAI;QAC5D,4DAAK;QAGL,yEACE;QAAA,wEACE;QAAA,2EAAc;QAAA,sEAA2B;QAAA,4DAAI;QAC/C,+GACE;QAMJ,4DAAK;QAEP,4DAAK;QAIL,4EACE;QAAA,2EACE;QAAA,wEACF;QAAA,4DAAM;QACR,4DAAO;QACT,4DAAQ;QAGV,4DAAa;QAEf,qEAAG;QAAA,yEAAa;QAAA,4DAAI;QACpB,2EACI;QAAA,2EACI;QAAA,8EAAgF;QAAA,6DAAC;QAAA,4DAAS;QAC1F,8EAAgF;QAAA,6DAAC;QAAA,4DAAS;QAC1F,8EAAgF;QAAA,6DAAC;QAAA,4DAAS;QAC1F,8EAAgF;QAAA,6DAAC;QAAA,4DAAS;QAC9F,4DAAM;QACN,2EACI;QAAA,8EAAgF;QAAA,6DAAC;QAAA,4DAAS;QAC1F,8EAAgF;QAAA,6DAAC;QAAA,4DAAS;QAC1F,8EAAgF;QAAA,6DAAC;QAAA,4DAAS;QAC9F,4DAAM;QACN,2EACI;QAAA,8EAAgF;QAAA,6DAAC;QAAA,4DAAS;QAC9F,4DAAM;QACV,4DAAM;;QA/DiE,kFAAyB;;6FDMnF,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PruebaComponent } from './prueba/prueba.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PruebaComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'pagina';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { PruebaComponent } from './prueba/prueba.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PruebaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-prueba',\n  templateUrl: './prueba.component.html',\n  styleUrls: ['./prueba.component.scss']\n})\nexport class PruebaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--Navbar-->\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark bg-primary\" [containerInside]=\"false\">\n\n    <!-- Navbar brand -->\n    <mdb-navbar-brand><a class=\"navbar-brand\" href=\"#\">Navbar</a></mdb-navbar-brand>\n  \n    <!-- Collapsible content -->\n    <links>\n  \n      <!-- Links -->\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link waves-light\" mdbWavesEffect>Home<span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link waves-light\" mdbWavesEffect>Features</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link waves-light\" mdbWavesEffect>Pricing</a>\n        </li>\n  \n        <!-- Dropdown -->\n        <li class=\"nav-item dropdown\" dropdown>\n          <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\n            Basic dropdown<span class=\"caret\"></span></a>\n          <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Action</a>\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Another action</a>\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Something else here</a>\n            <div class=\"divider dropdown-divider\"></div>\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Separated link</a>\n          </div>\n        </li>\n  \n      </ul>\n      <!-- Links -->\n  \n      <!-- Search form -->\n      <form class=\"form-inline waves-light\" mdbWavesEffect>\n        <div class=\"md-form my-0\">\n          <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\n        </div>\n      </form>\n    </links>\n    <!-- Collapsible content -->\n  \n  </mdb-navbar>\n  <!--/.Navbar-->\n<p>prueba works!</p>\n<div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n    <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\n        <button mdbBtn type=\"button\" color=\"default\" class=\"waves-light\" mdbWavesEffect>1</button>\n        <button mdbBtn type=\"button\" color=\"default\" class=\"waves-light\" mdbWavesEffect>2</button>\n        <button mdbBtn type=\"button\" color=\"default\" class=\"waves-light\" mdbWavesEffect>3</button>\n        <button mdbBtn type=\"button\" color=\"default\" class=\"waves-light\" mdbWavesEffect>4</button>\n    </div>\n    <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"Second group\">\n        <button mdbBtn type=\"button\" color=\"default\" class=\"waves-light\" mdbWavesEffect>5</button>\n        <button mdbBtn type=\"button\" color=\"default\" class=\"waves-light\" mdbWavesEffect>6</button>\n        <button mdbBtn type=\"button\" color=\"default\" class=\"waves-light\" mdbWavesEffect>7</button>\n    </div>\n    <div class=\"btn-group\" role=\"group\" aria-label=\"Third group\">\n        <button mdbBtn type=\"button\" color=\"default\" class=\"waves-light\" mdbWavesEffect>8</button>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}